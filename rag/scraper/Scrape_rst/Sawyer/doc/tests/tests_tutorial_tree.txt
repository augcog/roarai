(Table of Contents)
Integration/Unit Tests (h1)
--Getting Started (h2)
--Integration Tests (h2)
--Running Unit Tests (h2)
--Test Robots (h2)
--Writing Unit Tests (h2)
--Code Coverage (h2)


(Page path)
(h1) Integration/Unit Tests > (h2) Getting Started

(Segment 1)
#Integration/Unit Tests (h1)

How to test changes to MoveIt on various robots, including unit and integration tests.

**Note:** *This is a stub tutorial, to be expanded upon in the future*


##Getting Started (h2)
If you haven't already done so, make sure you've completed the steps in `Getting Started <../getting_started/getting_started.html>`_.




--------------------------------------------------------------------------------
(Table of Contents)
Integration/Unit Tests (h1)
--Getting Started (h2)
--Integration Tests (h2)
--Running Unit Tests (h2)
--Test Robots (h2)
--Writing Unit Tests (h2)
--Code Coverage (h2)


(Page path)
(h1) Integration/Unit Tests > (h2) Integration Tests

(Segment 2)
#Integration/Unit Tests (h1)

How to test changes to MoveIt on various robots, including unit and integration tests.

**Note:** *This is a stub tutorial, to be expanded upon in the future*


##Integration Tests (h2)

Python-based integration tests are available for testing higher-level move_group functionality in MoveIt. To run: ::

rostest moveit_ros_planning_interface python_move_group.test





--------------------------------------------------------------------------------
(Table of Contents)
Integration/Unit Tests (h1)
--Getting Started (h2)
--Integration Tests (h2)
--Running Unit Tests (h2)
--Test Robots (h2)
--Writing Unit Tests (h2)
--Code Coverage (h2)


(Page path)
(h1) Integration/Unit Tests > (h2) Running Unit Tests

(Segment 3)
#Integration/Unit Tests (h1)

How to test changes to MoveIt on various robots, including unit and integration tests.

**Note:** *This is a stub tutorial, to be expanded upon in the future*


##Running Unit Tests (h2)

To run unit tests locally on the entire MoveIt catkin workspace using catkin-tools: ::

catkin run_tests -iv

To run a test for just 1 package, `cd` to the package's directory and run::

catkin run_tests --no-deps --this -iv

To ignore most of the log/print output of the tests::

catkin run_tests --no-status --summarize --no-deps --this

To run a single test, you can execute the compiled file, e.g. from your catkin workspace::

./devel/lib/moveit_core/test_planning_scene




--------------------------------------------------------------------------------
(Table of Contents)
Integration/Unit Tests (h1)
--Getting Started (h2)
--Integration Tests (h2)
--Running Unit Tests (h2)
--Test Robots (h2)
--Writing Unit Tests (h2)
--Code Coverage (h2)


(Page path)
(h1) Integration/Unit Tests > (h2) Test Robots

(Segment 4)
#Integration/Unit Tests (h1)

How to test changes to MoveIt on various robots, including unit and integration tests.

**Note:** *This is a stub tutorial, to be expanded upon in the future*


##Test Robots (h2)

**Panda**

From the package `panda_moveit_config <https://github.com/ros-planning/panda_moveit_config>`_: ::

roslaunch panda_moveit_config demo.launch

**Fanuc M-10iA**

From the package `moveit_resources <https://github.com/ros-planning/moveit_resources>`_: ::

roslaunch moveit_resources demo.launch





--------------------------------------------------------------------------------
(Table of Contents)
Integration/Unit Tests (h1)
--Getting Started (h2)
--Integration Tests (h2)
--Running Unit Tests (h2)
--Test Robots (h2)
--Writing Unit Tests (h2)
--Code Coverage (h2)


(Page path)
(h1) Integration/Unit Tests > (h2) Writing Unit Tests

(Segment 5)
#Integration/Unit Tests (h1)

How to test changes to MoveIt on various robots, including unit and integration tests.

**Note:** *This is a stub tutorial, to be expanded upon in the future*


##Writing Unit Tests (h2)

The file below explains how a test is structured, so you can write your own. The entire test file, with includes, can be seen :codedir:`here <tests>` in the moveit_tutorials GitHub project.

MoveIt uses Google Test as a testing framework.

.. |br| raw:: html

<br />

.. tutorial-formatter:: ./test/tests.cpp





--------------------------------------------------------------------------------
(Table of Contents)
Integration/Unit Tests (h1)
--Getting Started (h2)
--Integration Tests (h2)
--Running Unit Tests (h2)
--Test Robots (h2)
--Writing Unit Tests (h2)
--Code Coverage (h2)


(Page path)
(h1) Integration/Unit Tests > (h2) Code Coverage

(Segment 6)
#Integration/Unit Tests (h1)

How to test changes to MoveIt on various robots, including unit and integration tests.

**Note:** *This is a stub tutorial, to be expanded upon in the future*


##Code Coverage (h2)

Test coverage measures the lines of code that are executed while running the test suite.
To accumulate statistics and create a html coverage report, build the code without optimization
and run the special `_coverage` target::

sudo apt install ros-noetic-code-coverage
catkin config --cmake-args -DENABLE_COVERAGE_TESTING=ON -DCMAKE_BUILD_TYPE=Debug
catkin build
catkin build moveit_core -v --no-deps --catkin-make-args moveit_core_coverage

The output will print where the coverage report is located and it looks similar to the following image:

.. image:: code_coverage_example.png
:width: 300px
:align: center
:alt: example code coverage output



--------------------------------------------------------------------------------
