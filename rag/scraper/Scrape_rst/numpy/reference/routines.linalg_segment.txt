Parsed Headers, Levels and Contents:
h1: The ``@`` operator
Contents:
  
  Introduced in NumPy 1.10.0, the ``@`` operator is preferable to
  other methods when computing the matrix product between 2d arrays. The
  :func:`numpy.matmul` function implements the ``@`` operator.
  
  .. currentmodule:: numpy
  
  Matrix and vector products
  --------------------------
  
  .. autosummary::
  :toctree: generated/
  
  dot
  linalg.multi_dot
  vdot
  inner
  outer
  matmul
  tensordot
  einsum
  einsum_path
  linalg.matrix_power
  kron
  

=====================================

h1: Decompositions
Contents:
  .. autosummary::
  :toctree: generated/
  
  linalg.cholesky
  linalg.qr
  linalg.svd
  

=====================================

h1: Matrix eigenvalues
Contents:
  .. autosummary::
  :toctree: generated/
  
  linalg.eig
  linalg.eigh
  linalg.eigvals
  linalg.eigvalsh
  

=====================================

h1: Norms and other numbers
Contents:
  .. autosummary::
  :toctree: generated/
  
  linalg.norm
  linalg.cond
  linalg.det
  linalg.matrix_rank
  linalg.slogdet
  trace
  

=====================================

h1: Solving equations and inverting matrices
Contents:
  .. autosummary::
  :toctree: generated/
  
  linalg.solve
  linalg.tensorsolve
  linalg.lstsq
  linalg.inv
  linalg.pinv
  linalg.tensorinv
  

=====================================

h1: Exceptions
Contents:
  .. autosummary::
  :toctree: generated/
  
  linalg.LinAlgError
  
  

=====================================

h1: Linear algebra on several matrices at once
Contents:
  
  .. versionadded:: 1.8.0
  
  Several of the linear algebra routines listed above are able to
  compute results for several matrices at once, if they are stacked into
  the same array.
  
  This is indicated in the documentation via input parameter
  specifications such as ``a : (..., M, M) array_like``. This means that
  if for instance given an input array ``a.shape == (N, M, M)``, it is
  interpreted as a "stack" of N matrices, each of size M-by-M. Similar
  specification applies to return values, for instance the determinant
  has ``det : (...)`` and will in this case return an array of shape
  ``det(a).shape == (N,)``. This generalizes to linear algebra
  operations on higher-dimensional arrays: the last 1 or 2 dimensions of
  a multidimensional array are interpreted as vectors or matrices, as
  appropriate for each operation.

=====================================

