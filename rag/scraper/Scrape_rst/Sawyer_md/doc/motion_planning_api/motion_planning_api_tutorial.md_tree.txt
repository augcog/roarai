(Table of Contents)
Motion Planning API (h1)
--Getting Started (h2)
--Running the Demo (h2)
--Expected Output (h2)
--The Entire Code (h2)
--The Launch File (h2)


(Page path)
(h1) Motion Planning API > (h2) Getting Started

(Segment 1)
#Motion Planning API (h1)

```{image} motion_planning_api_tutorial_robot_move_arm_1st.png
:width: 700px
```

In MoveIt, the motion planners are loaded using a plugin infrastructure. This
allows MoveIt to load motion planners at runtime. In this example, we will
run through the C++ code required to do this.


##Getting Started (h2)

If you haven't already done so, make sure you've completed the steps in [Getting Started](../getting_started/getting_started.html).




--------------------------------------------------------------------------------
(Table of Contents)
Motion Planning API (h1)
--Getting Started (h2)
--Running the Demo (h2)
--Expected Output (h2)
--The Entire Code (h2)
--The Launch File (h2)


(Page path)
(h1) Motion Planning API > (h2) Running the Demo

(Segment 2)
#Motion Planning API (h1)

```{image} motion_planning_api_tutorial_robot_move_arm_1st.png
:width: 700px
```

In MoveIt, the motion planners are loaded using a plugin infrastructure. This
allows MoveIt to load motion planners at runtime. In this example, we will
run through the C++ code required to do this.


##Running the Demo (h2)

Open two shells. In the first shell start RViz and wait for everything to finish loading:

```
roslaunch panda_moveit_config demo.launch
```

In the second shell, run the launch file:

```
roslaunch moveit_tutorials motion_planning_api_tutorial.launch
```

**Note:** This tutorial uses the **RvizVisualToolsGui** panel to step through the demo. To add this panel to RViz, follow the instructions in the [Visualization Tutorial](../quickstart_in_rviz/quickstart_in_rviz_tutorial.html#rviz-visual-tools).

After a short moment, the RViz window should appear and look similar to the one at the top of this page. To progress through each demo step either press the **Next** button in the **RvizVisualToolsGui** panel at the bottom of the screen or select **Key Tool** in the **Tools** panel at the top of the screen and then press **N** on your keyboard while RViz is focused.




--------------------------------------------------------------------------------
(Table of Contents)
Motion Planning API (h1)
--Getting Started (h2)
--Running the Demo (h2)
--Expected Output (h2)
--The Entire Code (h2)
--The Launch File (h2)


(Page path)
(h1) Motion Planning API > (h2) Expected Output

(Segment 3)
#Motion Planning API (h1)

```{image} motion_planning_api_tutorial_robot_move_arm_1st.png
:width: 700px
```

In MoveIt, the motion planners are loaded using a plugin infrastructure. This
allows MoveIt to load motion planners at runtime. In this example, we will
run through the C++ code required to do this.


##Expected Output (h2)

In RViz, we should be able to see four trajectories being replayed eventually:

> 1. The robot moves its arm to the first pose goal,
>
>    {{ A }}
>
> 2. The robot moves its arm to the joint goal,
>
>    {{ B }}
>
> 3. The robot moves its arm back to the original pose goal,
>
> 4. The robot moves its arm to a new pose goal while maintaining the end-effector level.
>
>    {{ C }}




--------------------------------------------------------------------------------
(Table of Contents)
Motion Planning API (h1)
--Getting Started (h2)
--Running the Demo (h2)
--Expected Output (h2)
--The Entire Code (h2)
--The Launch File (h2)


(Page path)
(h1) Motion Planning API > (h2) The Entire Code

(Segment 4)
#Motion Planning API (h1)

```{image} motion_planning_api_tutorial_robot_move_arm_1st.png
:width: 700px
```

In MoveIt, the motion planners are loaded using a plugin infrastructure. This
allows MoveIt to load motion planners at runtime. In this example, we will
run through the C++ code required to do this.


##The Entire Code (h2)

The entire code can be seen {codedir}`here in the moveit_tutorials GitHub project<motion_planning_api>`.

```{eval-rst}
.. tutorial-formatter:: ./src/motion_planning_api_tutorial.cpp
```




--------------------------------------------------------------------------------
(Table of Contents)
Motion Planning API (h1)
--Getting Started (h2)
--Running the Demo (h2)
--Expected Output (h2)
--The Entire Code (h2)
--The Launch File (h2)


(Page path)
(h1) Motion Planning API > (h2) The Launch File

(Segment 5)
#Motion Planning API (h1)

```{image} motion_planning_api_tutorial_robot_move_arm_1st.png
:width: 700px
```

In MoveIt, the motion planners are loaded using a plugin infrastructure. This
allows MoveIt to load motion planners at runtime. In this example, we will
run through the C++ code required to do this.


##The Launch File (h2)

The entire launch file is {codedir}`here <motion_planning_api/launch/motion_planning_api_tutorial.launch>` on GitHub. All the code in this tutorial can be compiled and run from the moveit_tutorials package.



--------------------------------------------------------------------------------
