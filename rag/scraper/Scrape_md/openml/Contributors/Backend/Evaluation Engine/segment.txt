Parsed Headers, Levels and Contents:
h2: Extending the Java App
Contents:

The bootstrap class of the webapplication is

`org.openml.webapplication.Main`

It automatically checks authentication settings (such as api_key) and the determines which function to invoke. 

It uses a switch-like if - else contruction to facilitate the functionalities of the various functions. Additional functions can be added to this freely. From there on, it is easy to add functionality to the webapplication. 

Parameters are handled using the Apache Commons CommandLineParser class, which makes sure that the passed parameters are available to the program. 

In order to make new functionalities available to the website, there also needs to be programmed an interface to the function, somewhere in the website. The next section details on that. 


=====================================

h2: Interfacing from the OpenML API
Contents:
By design, the REST API is not allowed to communicate with the Java App. All interfaces with the Java webapplication should go through other controllers of the PHP CodeIgniter framework., for example api_splits. Currently, the website features two main API's. These are represented by a Controller. Controllers can be found in the folder openml_OS/controllers. Here we see:
* api_new.php, representing the REST API
* api_splits.php, representing an API interfacing to the Java webapplication. 

=====================================

