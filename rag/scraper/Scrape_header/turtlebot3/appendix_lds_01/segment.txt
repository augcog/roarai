Parsed Headers, Levels and Contents:
h3: [LDS-01](#lds-01 "#lds-01")
Contents:


=====================================

h4: [Overview](#overview "#overview")
Contents:

![](/assets/images/platform/turtlebot3/appendix_lds/lds_small.png)
![](/assets/images/platform/turtlebot3/appendix_lds/lds_top_small.png)

* 360 Laser Distance Sensor LDS-01 is a 2D laser scanner capable of sensing 360 degrees that collects a set of data around the robot to use for SLAM (Simultaneous Localization and Mapping) and Navigation.
* The LDS-01 is used for TurtleBot3 Burger, Waffle and Waffle Pi models.
* It supports USB interface([USB2LDS](/docs/en/platform/turtlebot3/appendix_lds_01/#user-guide-for-embedded-board "/docs/en/platform/turtlebot3/appendix_lds_01/#user-guide-for-embedded-board")) and is easy to install on a PC.
* It supports UART interface for embedded baord.


=====================================

h4: [Introduction Video](#introduction-video "#introduction-video")
Contents:

* How to use the LDS-01

* Laser Distance Sensor (LDS) Example.

* ROS Hector SLAM demo using only a 360 Laser Distance Sensor LDS-01 made by HLDS (Hitachi-LG Data Storage).

* ROS Gmapping and Cartographer SLAM demo using TurtleBot3 and 360 Laser Distance Sensor LDS-01.


=====================================

h4: [Specifications](#specifications "#specifications")
Contents:


=====================================

h5: [General Specifications](#general-specifications "#general-specifications")
Contents:

| Items | Specifications |
| --- | --- |
| Operating supply voltage | 5V DC ±5% |
| Light source | Semiconductor Laser Diode(λ=785nm) |
| LASER safety | IEC60825-1 Class 1 |
| Current consumption | 400mA or less (Rush current 1A) |
| Detection distance | 120mm ~ 3,500mm |
| Interface | 3.3V USART (230,400 bps) 42bytes per 6 degrees, Full Duplex option |
| Ambient Light Resistance | 10,000 lux or less |
| Sampling Rate | 1.8kHz |
| Dimensions | 69.5(W) X 95.5(D) X 39.5(H)mm |
| Mass | Under 125g |


=====================================

h5: [Measurement Performance Specifications](#measurement-performance-specifications "#measurement-performance-specifications")
Contents:

| Items | Specifications |
| --- | --- |
| Distance Range | 120 ~ 3,500mm |
| Distance Accuracy (120mm ~ 499mm) | ±15mm |
| Distance Accuracy(500mm ~ 3,500mm) | ±5.0% |
| Distance Precision(120mm ~ 499mm) | ±10mm |
| Distance Precision(500mm ~ 3,500mm) | ±3.5% |
| Scan Rate | 300±10 rpm |
| Angular Range | 360° |
| Angular Resolution | 1° |


=====================================

h4: [Detail Specification Document](#detail-specification-document "#detail-specification-document")
Contents:

The following link contains information about basic performance, measurement performance, mechanism layout, optical path, data information, pin description and commands.

Here is the detail specification document : [PDF](/assets/docs/LDS_Basic_Specification.pdf "/assets/docs/LDS_Basic_Specification.pdf")

**NOTE**: The 360 Laser Distance Sensor LDS-01 for TurtleBot3 uses molex 51021-0800 and 53048-0810 instead of the basic housing and connector.

* [Connector for LDS] [Molex 51021-0800](http://www.molex.com/pdm_docs/sd/510210800_sd.pdf "http://www.molex.com/pdm_docs/sd/510210800_sd.pdf")
* [Connector for USB2LDS] [Molex 53048-0810](http://www.molex.com/pdm_docs/sd/530480810_sd.pdf "http://www.molex.com/pdm_docs/sd/530480810_sd.pdf")


=====================================

h4: [LDS for TurtleBot3](#lds-for-turtlebot3 "#lds-for-turtlebot3")
Contents:

The LDS-01 is used for TurtleBot3 Burger, Waffle and Waffle Pi models.

![](/assets/images/platform/turtlebot3/hardware_setup/turtlebot3_models.png)


=====================================

h4: [User Guide (for ROS)](#user-guide-for-ros "#user-guide-for-ros")
Contents:

We are offering [ROS package for LSD](http://wiki.ros.org/hls_lfcd_lds_driver "http://wiki.ros.org/hls_lfcd_lds_driver"). The hls\_lfcd\_lds\_driver package provides a driver for **HLS(Hitachi-LG Sensor) LFCD LDS(Laser Distance Sensor)**.

**NOTE**: Due to firmware update (after buy it on Oct. 2017), the sensor is running directly when power in on.


=====================================

h4: Installation
Contents:

```
$ sudo apt-get install ros-kinetic-hls-lfcd-lds-driver

```


=====================================

h4: Set Permission for LDS-01
Contents:

```
$ sudo chmod a+rw /dev/ttyUSB0

```


=====================================

h4: Run hlds\_laser\_publisher Node
Contents:

```
$ roslaunch hls_lfcd_lds_driver hlds_laser.launch

```


=====================================

h4: Run hlds\_laser\_publisher Node with RViz
Contents:

```
$ roslaunch hls_lfcd_lds_driver view_hlds_laser.launch

```


=====================================

h4: [User Guide (for Driver)](#user-guide-for-driver "#user-guide-for-driver")
Contents:

* In addition to ROS, the LDS-01 supports Windows, Linux, and MacOS development environments for general purposes.
* The software requirement is:
	+ GCC (for Linux and macOS), MinGW (for Windows)
	+ Boost library (Lib for boost system, tested on v1.66.0)


=====================================

h5: Download
Contents:

* Download the LDS-01’s driver and GUI source code.

```
$ git clone https://github.com/ROBOTIS-GIT/hls_lfcd_lds_driver.git

```

* Or you can download directly on web browser at github repository below:
	+ [https://github.com/ROBOTIS-GIT/hls\_lfcd\_lds\_driver](https://github.com/ROBOTIS-GIT/hls_lfcd_lds_driver "https://github.com/ROBOTIS-GIT/hls_lfcd_lds_driver")
* Install dependent software and libraries for each development environment
	+ [Qt - Open Source Version](https://www.qt.io/download "https://www.qt.io/download")
	+ GCC (for Linux and macOS), [MinGW](https://sourceforge.net/projects/mingw/files/ "https://sourceforge.net/projects/mingw/files/") (for Windows)
	+ [Boost library](http://www.boost.org/users/download/ "http://www.boost.org/users/download/")


=====================================

h5: Build
Contents:

* Run the Qt Creator
* Open file (`Ctrl`-`O`) the `lds_polar_graph.pro` file (hls\_lfcd\_lds\_driver/applications/lds\_polar\_graph/lds\_polar\_graph.pro)
* Change the [input your portname](https://github.com/ROBOTIS-GIT/hls_lfcd_lds_driver/blob/cf866c6b80060ab9270a664d665d287afcca2c10/applications/lds_polar_graph/lds_polar_graph.cpp#L47 "https://github.com/ROBOTIS-GIT/hls_lfcd_lds_driver/blob/cf866c6b80060ab9270a664d665d287afcca2c10/applications/lds_polar_graph/lds_polar_graph.cpp#L47") of source code
* Build all (`Ctrl`-`Shift`-`B`)


=====================================

h5: Run
Contents:

* Run the application (`Ctrl`-`R`)

![](/assets/images/platform/turtlebot3/appendix_lds/lds_gui.png)


=====================================

h4: [User Guide (for GUI)](#user-guide-for-gui "#user-guide-for-gui")
Contents:

* We provide a basic GUI tool for visually checking the data of the LDS-01.
* It supports Linux, Windows, and macOS.
* The software requirement is:
	+ Qt Creator and Libs (tested on Qt Creator v4.5.0 and Qt Libs v5.10.0)
	+ GCC (for Linux and macOS), MinGW (for Windows), This can be installed together while installing Qt.
	+ Boost library (Lib for boost system, tested on v1.66.0)


=====================================

h4: [User Guide (for Embedded Board)](#user-guide-for-embedded-board "#user-guide-for-embedded-board")
Contents:

* We provide a way to connect to an embedded board.
* The data of the LDS-01 can be used on the embedded board like OpenCR and Arduino. Please refer to below instructions.


=====================================

h5: Preparations
Contents:

* The LDS-01 in TurtleBot3 package comes with the interface board, but you can also connect the sensor to the power and UART pins of embedded boards.

![](/assets/images/platform/turtlebot3/appendix_lds/lds_lines.png)

**WARNNING** : The wiring colours of LDS-01 could differ from the picture by manaufacturers.

* OpenCR develops and downloads firmware through the Arduino IDE. Therefore, you must install the Arduino IDE in advance and install the OpenCR board package. Install through the following link document.

	+ [Install Arduino IDE and OpenCR](http://emanual.robotis.com/docs/en/parts/controller/opencr10/#arduino-ide "http://emanual.robotis.com/docs/en/parts/controller/opencr10/#arduino-ide")


=====================================

h5: Download firmware and run
Contents:

1. After connecting USB to PC, select `Tools` -> `Board` -> `OpenCR Board` in Arduino IDE.
2. Change `Tools`-> `Port` to the port to which the board is connected.
3. In the Arduino IDE Examples, select the firmware for LDS (`File` -> `Examples` -> `OpenCR` -> `Etc` -> `LDS` -> `drawLDS`).
4. Click `Upload` icon in the Arduino IDE that displays the red circle to build and download the firmware. When the download is completed, the firmware is automatically executed.


=====================================

h4: [Certifications](#certifications "#certifications")
Contents:

Please inquire us for information regarding unlisted certifications.


=====================================

h5: [FCC](#fcc "#fcc")
Contents:

**Note**: This equipment has been tested and found to comply with the limits for a Class B digital device, pursuant to part 15 of the FCC Rules. These limits are designed to provide reasonable protection against harmful interference in a residential installation. This equipment generates, uses and can radiate radio frequency energy and, if not installed and used in accordance with the instructions, may cause harmful interference to radio communications. However, there is no guarantee that interference will not occur in a particular installation. If this equipment does cause harmful interference to radio or television reception, which can be determined by turning the equipment off and on, the user is encouraged to try to correct the interference by one more of the following measures:

* Reorient or relocate the receiving antenna.
* Increase the separation between the equipment and receiver.
* Connect the equipment into an outlet on a circuit different from that to which the receiver is connected.
* Consult the dealer or an experienced radio/TV technician for help.

**WARNING**  

Any changes or modifications not expressly approved by the manufacturer could void the user’s authority to operate
the equipment.

 Previous Page
Next Page 

=====================================

