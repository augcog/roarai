Parsed Headers, Levels and Contents:
h2: [Standalone Gazebo Simulation](#standalone-gazebo-simulation "#standalone-gazebo-simulation")
Contents:

**NOTE**: This tutorial is developed only for user who want to simulate TurtleBot3 without ROS. However, we highly recommend to run simulation on ROS.

1. Install Library for Gazebo7

```
$ sudo apt-get install libgazebo7-dev

```
2. Download Source Code from Github

```
$ git clone https://github.com/ROBOTIS-GIT/turtlebot3_gazebo_plugin

```
3. Add Gazebo Plugin Path in `.bashrc` File

```
$ nano ~/.bashrc

```

**NOTE**: turtlebot3\_gazebo\_plugin path = ~/turtlebot3\_gazebo\_plugin

```
 export GAZEBO\_PLUGIN\_PATH=$GAZEBO\_PLUGIN\_PATH:${turtlebot3\_gazebo\_plugin path}/build
 export GAZEBO\_MODEL\_PATH=$GAZEBO\_MODEL\_PATH:${turtlebot3\_gazebo\_plugin path}/models

```
4. Make and Build

```
$ cd ${turtlebot3\_gazebo\_plugin path}
$ mkdir build
$ cd build
$ cmake ..
$ make

```
5. Execute Gazebo Plugin.  

 Replace the **${TB3\_MODEL}** with the TurtleBot3 model you want to use: `burger`, `waffle`, `waffle_pi`.

```
$ cd ${turtlebot3\_gazebo\_plugin}
$ gazebo worlds/turtlebot3_${TB3\_MODEL}.world

```

![](/assets/images/platform/turtlebot3/simulation/gazebo_waffle_pi.png)
6. Teleoperation with Keyboard

```
w - set linear velocity up
x - set linear velocity down
d - set angular velocity up
a - set angular velocity down
s - set all velocity to zero

```
7. Topic Subscribe Command
	* Show all topic

	```
	$ gz topic -l

	```
	* Subscribe scan data

	```
	$ gz topic -e /gazebo/default/user/turtlebot3_${TB3\_MODEL}/lidar/hls_lfcd_lds/scan

	```
	* Subscribe image data
		+ For Waffle

		```
		 $ gz topic -e /gazebo/default/user/turtlebot3_waffle/image/intel_realsense_r200/image

		```
		+ For Waffle Pi

		```
		 $ gz topic -e /gazebo/default/user/turtlebot3_waffle_pi/image/raspberry_pi_cam/image

		```
8. Execute listener

```
$ cd ${turtlebot3\_gazebo\_plugin}/build
$ ./lidar_listener ${TB3\_MODEL}

```
9. Open a new terminal window and enter below command.

```
$ cd ${turtlebot3\_gazebo\_plugin}/build
$ ./image_listener ${TB3\_MODEL}

```

**NOTE**: This feature is available for Kinetic only.

**NOTE**: This feature is available for Kinetic only.

**NOTE**: This feature is available for Kinetic only.

**NOTE**: This feature is available for Kinetic only.

**NOTE**: This feature is available for Kinetic only.

**NOTE**: This feature is available for Kinetic only.

**NOTE**: This feature is available for Kinetic only.

 Previous Page
Next Page 

$reference = $(".archive");
$(window).resize(function() {
 var newWidth = $reference.width() \* 0.90;
 if (newWidth > 640) { newWidth = 640; }

 // Resize all videos according to aspect ratio
 $("iframe").each(
 function(index, elem) {
 elem.setAttribute("width", (newWidth).toFixed());
 elem.setAttribute("height", (newWidth\*0.56).toFixed());
 }
 );
// Kick off one resize to fix all videos on page load
}).resize();

Â© 2023 ROBOTIS. Powered by [Jekyll](http://jekyllrb.com "http://jekyllrb.com") & [Minimal Mistakes](https://mademistakes.com/work/minimal-mistakes-jekyll-theme/ "https://mademistakes.com/work/minimal-mistakes-jekyll-theme/").

 var \_gaq = \_gaq || [];
 \_gaq.push(['\_setAccount', 'UA-83196341-13']);
 \_gaq.push(['\_trackPageview']);

 (function() {
 var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
 ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
 var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
 })();

 window.dataLayer = window.dataLayer || [];
 function gtag(){dataLayer.push(arguments);}
 gtag('js', new Date());

 gtag('config', 'G-155KHSC07K');


=====================================

