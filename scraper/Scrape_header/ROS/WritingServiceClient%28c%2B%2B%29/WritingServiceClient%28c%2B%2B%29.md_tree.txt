(Table of Contents)
------ROS 2 Documentation (h4)
Wiki (h1)
Page (h1)
User (h1)
Writing a Simple Service and Client (C++) (h1)
--Writing a Service Node (h2)
----The Code (h3)
----The Code Explained (h3)
--Writing the Client Node (h2)
--Building your nodes (h2)
--Running the nodes (h2)
----Running the Server (h3)
----Running the Client (h3)
--Video Tutorial (h2)


(Page path)
(h1)  > (h2)  > (h3)  > (h4) ROS 2 Documentation

(Segment 1)
# (h1)
[]
## (h2)
[]
### (h3)
[]
####ROS 2 Documentation (h4)

The ROS Wiki is for ROS 1. Are you using ROS 2 ([Humble](http://docs.ros.org/en/humble/ "http://docs.ros.org/en/humble/"), [Iron](http://docs.ros.org/en/iron/ "http://docs.ros.org/en/iron/"), or [Rolling](http://docs.ros.org/en/rolling/ "http://docs.ros.org/en/rolling/"))?   
[Check out the ROS 2 Project Documentation](http://docs.ros.org "http://docs.ros.org")  
Package specific documentation can be found on [index.ros.org](https://index.ros.org "https://index.ros.org")




--------------------------------------------------------------------------------
(Table of Contents)
------ROS 2 Documentation (h4)
Wiki (h1)
Page (h1)
User (h1)
Writing a Simple Service and Client (C++) (h1)
--Writing a Service Node (h2)
----The Code (h3)
----The Code Explained (h3)
--Writing the Client Node (h2)
--Building your nodes (h2)
--Running the nodes (h2)
----Running the Server (h3)
----Running the Client (h3)
--Video Tutorial (h2)


(Page path)
(h1) Wiki

(Segment 2)
#Wiki (h1)

* [Distributions](/Distributions "/Distributions")
* [ROS/Installation](/ROS/Installation "/ROS/Installation")
* [ROS/Tutorials](/ROS/Tutorials "/ROS/Tutorials")
* [RecentChanges](/RecentChanges "/RecentChanges")
* [WritingServiceClient(c++)](/ROS/Tutorials/WritingServiceClient%28c%2B%2B%29 "/ROS/Tutorials/WritingServiceClient%28c%2B%2B%29")




--------------------------------------------------------------------------------
(Table of Contents)
------ROS 2 Documentation (h4)
Wiki (h1)
Page (h1)
User (h1)
Writing a Simple Service and Client (C++) (h1)
--Writing a Service Node (h2)
----The Code (h3)
----The Code Explained (h3)
--Writing the Client Node (h2)
--Building your nodes (h2)
--Running the nodes (h2)
----Running the Server (h3)
----Running the Client (h3)
--Video Tutorial (h2)


(Page path)
(h1) Page

(Segment 3)
#Page (h1)

* Immutable Page
* [Comments](# "#")
* [Info](/action/info/ROS/Tutorials/WritingServiceClient%28c%2B%2B%29?action=info "/action/info/ROS/Tutorials/WritingServiceClient%28c%2B%2B%29?action=info")
* [Attachments](/action/AttachFile/ROS/Tutorials/WritingServiceClient%28c%2B%2B%29?action=AttachFile "/action/AttachFile/ROS/Tutorials/WritingServiceClient%28c%2B%2B%29?action=AttachFile")
* More Actions:

Raw Text
Print View
Render as Docbook
Delete Cache
------------------------
Check Spelling
Like Pages
Local Site Map
------------------------
Rename Page
Copy Page
Delete Page
------------------------
My Pages
Subscribe User
------------------------
Remove Spam
Revert to this revision
Package Pages
Sync Pages
------------------------
CreatePdfDocument
Load
RawFile
Save
SlideShow

<!--// Init menu
actionsMenuInit('More Actions:');
//-->




--------------------------------------------------------------------------------
(Table of Contents)
------ROS 2 Documentation (h4)
Wiki (h1)
Page (h1)
User (h1)
Writing a Simple Service and Client (C++) (h1)
--Writing a Service Node (h2)
----The Code (h3)
----The Code Explained (h3)
--Writing the Client Node (h2)
--Building your nodes (h2)
--Running the nodes (h2)
----Running the Server (h3)
----Running the Client (h3)
--Video Tutorial (h2)


(Page path)
(h1) User

(Segment 4)
#User (h1)

* [Login](/action/login/ROS/Tutorials/WritingServiceClient%28c%2B%2B%29?action=login "/action/login/ROS/Tutorials/WritingServiceClient%28c%2B%2B%29?action=login")

|  |
| --- |
| **Note:** This tutorial assumes that you have completed the previous tutorials: [examining the simple publisher and subscriber](/ROS/Tutorials/ExaminingPublisherSubscriber "/ROS/Tutorials/ExaminingPublisherSubscriber").  |

|  |
| --- |
| (!) Please ask about problems and questions regarding this tutorial on [answers.ros.org](http://answers.ros.org "http://answers.ros.org"). Don't forget to include in your question the link to this page, the versions of your OS & ROS, and also add appropriate tags. |




--------------------------------------------------------------------------------
(Table of Contents)
------ROS 2 Documentation (h4)
Wiki (h1)
Page (h1)
User (h1)
Writing a Simple Service and Client (C++) (h1)
--Writing a Service Node (h2)
----The Code (h3)
----The Code Explained (h3)
--Writing the Client Node (h2)
--Building your nodes (h2)
--Running the nodes (h2)
----Running the Server (h3)
----Running the Client (h3)
--Video Tutorial (h2)


(Page path)
(h1) Writing a Simple Service and Client (C++) > (h2) Writing a Service Node > (h3) The Code

(Segment 5)
#Writing a Simple Service and Client (C++) (h1)

**Description:** This tutorial covers how to write a service and client node in C++.  

**Tutorial Level:** BEGINNER  

**Next Tutorial:** [Examining the simple service and client](/ROS/Tutorials/ExaminingServiceClient "/ROS/Tutorials/ExaminingServiceClient")   

<!--
// @@ Buildsystem macro
function Buildsystem(sections) {
 var dotversion = ".buildsystem."

 // Tag shows unless already tagged
 $.each(sections.show,
 function() {
 $("div" + dotversion + this).not(".versionshow,.versionhide").addClass("versionshow")
 }
 )

 // Tag hides unless already tagged
 $.each(sections.hide,
 function() {
 $("div" + dotversion + this).not(".versionshow,.versionhide").addClass("versionhide")
 }
 )

 // Show or hide according to tag
 $(".versionshow").removeClass("versionshow").filter("div").show()
 $(".versionhide").removeClass("versionhide").filter("div").hide()
}

function getURLParameter(name) {
 return decodeURIComponent(
 (
 new RegExp(
 '[?|&]' + name + '=' + '([^&;]+?)(&|#|;|$)'
 ).exec(location.search) || [,""]
 )[1].replace(/\+/g, '%20')
 ) || null;
}

$(document).ready(function() {
 var activesystem = "catkin";
 var url\_distro = getURLParameter('buildsystem');
 if (url\_distro)
 {
 activesystem = url\_distro;
 }
 $("div.buildsystem").not("."+activesystem).hide();
 $("#"+activesystem).click();
 $("input.version:hidden").each(function() {
 var bg = $(this).attr("value").split(":");
 $("div.version." + bg[0]).css("background-color", bg[1]).removeClass(bg[0])
 });
})
 // -->

 catkin 
 rosbuild 
 Contents1. [Writing a Service Node](#roscpp_tutorials.2FTutorials.2FWritingServiceClient.Writing_a_Service_Node "#roscpp_tutorials.2FTutorials.2FWritingServiceClient.Writing_a_Service_Node")
	1. [The Code](#roscpp_tutorials.2FTutorials.2FWritingServiceClient.The_Code "#roscpp_tutorials.2FTutorials.2FWritingServiceClient.The_Code")
	2. [The Code Explained](#roscpp_tutorials.2FTutorials.2FWritingServiceClient.The_Code_Explained "#roscpp_tutorials.2FTutorials.2FWritingServiceClient.The_Code_Explained")
2. [Writing the Client Node](#roscpp_tutorials.2FTutorials.2FWritingServiceClient.Writing_the_Client_Node "#roscpp_tutorials.2FTutorials.2FWritingServiceClient.Writing_the_Client_Node")
	1. [The Code](#roscpp_tutorials.2FTutorials.2FWritingServiceClient.The_Code-1 "#roscpp_tutorials.2FTutorials.2FWritingServiceClient.The_Code-1")
	2. [The Code Explained](#roscpp_tutorials.2FTutorials.2FWritingServiceClient.The_Code_Explained-1 "#roscpp_tutorials.2FTutorials.2FWritingServiceClient.The_Code_Explained-1")
3. [Building your nodes](#roscpp_tutorials.2FTutorials.2FWritingServiceClient.Building_your_nodes "#roscpp_tutorials.2FTutorials.2FWritingServiceClient.Building_your_nodes")
4. [Building your nodes](#roscpp_tutorials.2FTutorials.2FWritingServiceClient.Building_your_nodes-1 "#roscpp_tutorials.2FTutorials.2FWritingServiceClient.Building_your_nodes-1")
5. [Running the nodes](#roscpp_tutorials.2FTutorials.2FWritingServiceClient.Running_the_nodes "#roscpp_tutorials.2FTutorials.2FWritingServiceClient.Running_the_nodes")
	1. [Running the Server](#roscpp_tutorials.2FTutorials.2FWritingServiceClient.Running_the_Server "#roscpp_tutorials.2FTutorials.2FWritingServiceClient.Running_the_Server")
	2. [Running the Client](#roscpp_tutorials.2FTutorials.2FWritingServiceClient.Running_the_Client "#roscpp_tutorials.2FTutorials.2FWritingServiceClient.Running_the_Client")
6. [Video Tutorial](#Video_Tutorial "#Video_Tutorial")


##Writing a Service Node (h2)

Here we'll create the service ("add\_two\_ints\_server") node which will receive two ints and return the sum. Change directory into the beginner\_tutorials package, you created previously in the [creating a rosbuild package](/ROS/Tutorials/CreatingPackage "/ROS/Tutorials/CreatingPackage") tutorial: 
```
roscd beginner_tutorials
```

Change directories to your beginner\_tutorials package you created in your catkin workspace previous tutorials: 
```
roscd beginner_tutorials
```

Please make sure you have followed the directions in the previous tutorial for creating the service needed in this tutorial, [creating the AddTwoInts.srv](/ROS/Tutorials/CreatingMsgAndSrv#Creating_a_srv "/ROS/Tutorials/CreatingMsgAndSrv#Creating_a_srv") (be sure to choose the right version of build tool you're using at the top of wiki page in the link). 

###The Code (h3)

Create the src/add\_two\_ints\_client.cpp file within the beginner\_tutorials package and paste the following inside it: 

document.write('<a href="#" onclick="return togglenumber(\'roscpp\_tutorials.2FTutorials.2FWritingServiceClient.CA-f2a39abe84f67d951ff455fdbeda1ad12e9783e4\', 1, 1);" \
 class="codenumbers">Toggle line numbers<\/a>');

```
 [1](#roscpp_tutorials.2FTutorials.2FWritingServiceClient.CA-f2a39abe84f67d951ff455fdbeda1ad12e9783e4_1 "#roscpp_tutorials.2FTutorials.2FWritingServiceClient.CA-f2a39abe84f67d951ff455fdbeda1ad12e9783e4_1") #include "ros/ros.h"
 [2](#roscpp_tutorials.2FTutorials.2FWritingServiceClient.CA-f2a39abe84f67d951ff455fdbeda1ad12e9783e4_2 "#roscpp_tutorials.2FTutorials.2FWritingServiceClient.CA-f2a39abe84f67d951ff455fdbeda1ad12e9783e4_2") #include "beginner\_tutorials/AddTwoInts.h"
 [3](#roscpp_tutorials.2FTutorials.2FWritingServiceClient.CA-f2a39abe84f67d951ff455fdbeda1ad12e9783e4_3 "#roscpp_tutorials.2FTutorials.2FWritingServiceClient.CA-f2a39abe84f67d951ff455fdbeda1ad12e9783e4_3") #include <cstdlib>
 [4](#roscpp_tutorials.2FTutorials.2FWritingServiceClient.CA-f2a39abe84f67d951ff455fdbeda1ad12e9783e4_4 "#roscpp_tutorials.2FTutorials.2FWritingServiceClient.CA-f2a39abe84f67d951ff455fdbeda1ad12e9783e4_4") 
 [5](#roscpp_tutorials.2FTutorials.2FWritingServiceClient.CA-f2a39abe84f67d951ff455fdbeda1ad12e9783e4_5 "#roscpp_tutorials.2FTutorials.2FWritingServiceClient.CA-f2a39abe84f67d951ff455fdbeda1ad12e9783e4_5") int main(int argc, char \*\*argv)
 [6](#roscpp_tutorials.2FTutorials.2FWritingServiceClient.CA-f2a39abe84f67d951ff455fdbeda1ad12e9783e4_6 "#roscpp_tutorials.2FTutorials.2FWritingServiceClient.CA-f2a39abe84f67d951ff455fdbeda1ad12e9783e4_6") {
 [7](#roscpp_tutorials.2FTutorials.2FWritingServiceClient.CA-f2a39abe84f67d951ff455fdbeda1ad12e9783e4_7 "#roscpp_tutorials.2FTutorials.2FWritingServiceClient.CA-f2a39abe84f67d951ff455fdbeda1ad12e9783e4_7")  ros::init(argc, argv, "add\_two\_ints\_client");
 [8](#roscpp_tutorials.2FTutorials.2FWritingServiceClient.CA-f2a39abe84f67d951ff455fdbeda1ad12e9783e4_8 "#roscpp_tutorials.2FTutorials.2FWritingServiceClient.CA-f2a39abe84f67d951ff455fdbeda1ad12e9783e4_8")  if (argc != 3)
 [9](#roscpp_tutorials.2FTutorials.2FWritingServiceClient.CA-f2a39abe84f67d951ff455fdbeda1ad12e9783e4_9 "#roscpp_tutorials.2FTutorials.2FWritingServiceClient.CA-f2a39abe84f67d951ff455fdbeda1ad12e9783e4_9")  {
 [10](#roscpp_tutorials.2FTutorials.2FWritingServiceClient.CA-f2a39abe84f67d951ff455fdbeda1ad12e9783e4_10 "#roscpp_tutorials.2FTutorials.2FWritingServiceClient.CA-f2a39abe84f67d951ff455fdbeda1ad12e9783e4_10")  ROS\_INFO("usage: add\_two\_ints\_client X Y");
 [11](#roscpp_tutorials.2FTutorials.2FWritingServiceClient.CA-f2a39abe84f67d951ff455fdbeda1ad12e9783e4_11 "#roscpp_tutorials.2FTutorials.2FWritingServiceClient.CA-f2a39abe84f67d951ff455fdbeda1ad12e9783e4_11")  return 1;
 [12](#roscpp_tutorials.2FTutorials.2FWritingServiceClient.CA-f2a39abe84f67d951ff455fdbeda1ad12e9783e4_12 "#roscpp_tutorials.2FTutorials.2FWritingServiceClient.CA-f2a39abe84f67d951ff455fdbeda1ad12e9783e4_12")  }
 [13](#roscpp_tutorials.2FTutorials.2FWritingServiceClient.CA-f2a39abe84f67d951ff455fdbeda1ad12e9783e4_13 "#roscpp_tutorials.2FTutorials.2FWritingServiceClient.CA-f2a39abe84f67d951ff455fdbeda1ad12e9783e4_13") 
 [14](#roscpp_tutorials.2FTutorials.2FWritingServiceClient.CA-f2a39abe84f67d951ff455fdbeda1ad12e9783e4_14 "#roscpp_tutorials.2FTutorials.2FWritingServiceClient.CA-f2a39abe84f67d951ff455fdbeda1ad12e9783e4_14")  ros::NodeHandle n;
 [15](#roscpp_tutorials.2FTutorials.2FWritingServiceClient.CA-f2a39abe84f67d951ff455fdbeda1ad12e9783e4_15 "#roscpp_tutorials.2FTutorials.2FWritingServiceClient.CA-f2a39abe84f67d951ff455fdbeda1ad12e9783e4_15")  ros::ServiceClient client = n.serviceClient<beginner\_tutorials::AddTwoInts>("add\_two\_ints");
 [16](#roscpp_tutorials.2FTutorials.2FWritingServiceClient.CA-f2a39abe84f67d951ff455fdbeda1ad12e9783e4_16 "#roscpp_tutorials.2FTutorials.2FWritingServiceClient.CA-f2a39abe84f67d951ff455fdbeda1ad12e9783e4_16")  beginner\_tutorials::AddTwoInts srv;
 [17](#roscpp_tutorials.2FTutorials.2FWritingServiceClient.CA-f2a39abe84f67d951ff455fdbeda1ad12e9783e4_17 "#roscpp_tutorials.2FTutorials.2FWritingServiceClient.CA-f2a39abe84f67d951ff455fdbeda1ad12e9783e4_17")  srv.request.a = atoll(argv[1]);
 [18](#roscpp_tutorials.2FTutorials.2FWritingServiceClient.CA-f2a39abe84f67d951ff455fdbeda1ad12e9783e4_18 "#roscpp_tutorials.2FTutorials.2FWritingServiceClient.CA-f2a39abe84f67d951ff455fdbeda1ad12e9783e4_18")  srv.request.b = atoll(argv[2]);
 [19](#roscpp_tutorials.2FTutorials.2FWritingServiceClient.CA-f2a39abe84f67d951ff455fdbeda1ad12e9783e4_19 "#roscpp_tutorials.2FTutorials.2FWritingServiceClient.CA-f2a39abe84f67d951ff455fdbeda1ad12e9783e4_19")  if (client.call(srv))
 [20](#roscpp_tutorials.2FTutorials.2FWritingServiceClient.CA-f2a39abe84f67d951ff455fdbeda1ad12e9783e4_20 "#roscpp_tutorials.2FTutorials.2FWritingServiceClient.CA-f2a39abe84f67d951ff455fdbeda1ad12e9783e4_20")  {
 [21](#roscpp_tutorials.2FTutorials.2FWritingServiceClient.CA-f2a39abe84f67d951ff455fdbeda1ad12e9783e4_21 "#roscpp_tutorials.2FTutorials.2FWritingServiceClient.CA-f2a39abe84f67d951ff455fdbeda1ad12e9783e4_21")  ROS\_INFO("Sum: %ld", (long int)srv.response.sum);
 [22](#roscpp_tutorials.2FTutorials.2FWritingServiceClient.CA-f2a39abe84f67d951ff455fdbeda1ad12e9783e4_22 "#roscpp_tutorials.2FTutorials.2FWritingServiceClient.CA-f2a39abe84f67d951ff455fdbeda1ad12e9783e4_22")  }
 [23](#roscpp_tutorials.2FTutorials.2FWritingServiceClient.CA-f2a39abe84f67d951ff455fdbeda1ad12e9783e4_23 "#roscpp_tutorials.2FTutorials.2FWritingServiceClient.CA-f2a39abe84f67d951ff455fdbeda1ad12e9783e4_23")  else
 [24](#roscpp_tutorials.2FTutorials.2FWritingServiceClient.CA-f2a39abe84f67d951ff455fdbeda1ad12e9783e4_24 "#roscpp_tutorials.2FTutorials.2FWritingServiceClient.CA-f2a39abe84f67d951ff455fdbeda1ad12e9783e4_24")  {
 [25](#roscpp_tutorials.2FTutorials.2FWritingServiceClient.CA-f2a39abe84f67d951ff455fdbeda1ad12e9783e4_25 "#roscpp_tutorials.2FTutorials.2FWritingServiceClient.CA-f2a39abe84f67d951ff455fdbeda1ad12e9783e4_25")  ROS\_ERROR("Failed to call service add\_two\_ints");
 [26](#roscpp_tutorials.2FTutorials.2FWritingServiceClient.CA-f2a39abe84f67d951ff455fdbeda1ad12e9783e4_26 "#roscpp_tutorials.2FTutorials.2FWritingServiceClient.CA-f2a39abe84f67d951ff455fdbeda1ad12e9783e4_26")  return 1;
 [27](#roscpp_tutorials.2FTutorials.2FWritingServiceClient.CA-f2a39abe84f67d951ff455fdbeda1ad12e9783e4_27 "#roscpp_tutorials.2FTutorials.2FWritingServiceClient.CA-f2a39abe84f67d951ff455fdbeda1ad12e9783e4_27")  }
 [28](#roscpp_tutorials.2FTutorials.2FWritingServiceClient.CA-f2a39abe84f67d951ff455fdbeda1ad12e9783e4_28 "#roscpp_tutorials.2FTutorials.2FWritingServiceClient.CA-f2a39abe84f67d951ff455fdbeda1ad12e9783e4_28") 
 [29](#roscpp_tutorials.2FTutorials.2FWritingServiceClient.CA-f2a39abe84f67d951ff455fdbeda1ad12e9783e4_29 "#roscpp_tutorials.2FTutorials.2FWritingServiceClient.CA-f2a39abe84f67d951ff455fdbeda1ad12e9783e4_29")  return 0;
 [30](#roscpp_tutorials.2FTutorials.2FWritingServiceClient.CA-f2a39abe84f67d951ff455fdbeda1ad12e9783e4_30 "#roscpp_tutorials.2FTutorials.2FWritingServiceClient.CA-f2a39abe84f67d951ff455fdbeda1ad12e9783e4_30") }

```




--------------------------------------------------------------------------------
(Table of Contents)
------ROS 2 Documentation (h4)
Wiki (h1)
Page (h1)
User (h1)
Writing a Simple Service and Client (C++) (h1)
--Writing a Service Node (h2)
----The Code (h3)
----The Code Explained (h3)
--Writing the Client Node (h2)
--Building your nodes (h2)
--Running the nodes (h2)
----Running the Server (h3)
----Running the Client (h3)
--Video Tutorial (h2)


(Page path)
(h1) Writing a Simple Service and Client (C++) > (h2) Writing a Service Node > (h3) The Code Explained

(Segment 6)
#Writing a Simple Service and Client (C++) (h1)

**Description:** This tutorial covers how to write a service and client node in C++.  

**Tutorial Level:** BEGINNER  

**Next Tutorial:** [Examining the simple service and client](/ROS/Tutorials/ExaminingServiceClient "/ROS/Tutorials/ExaminingServiceClient")   

<!--
// @@ Buildsystem macro
function Buildsystem(sections) {
 var dotversion = ".buildsystem."

 // Tag shows unless already tagged
 $.each(sections.show,
 function() {
 $("div" + dotversion + this).not(".versionshow,.versionhide").addClass("versionshow")
 }
 )

 // Tag hides unless already tagged
 $.each(sections.hide,
 function() {
 $("div" + dotversion + this).not(".versionshow,.versionhide").addClass("versionhide")
 }
 )

 // Show or hide according to tag
 $(".versionshow").removeClass("versionshow").filter("div").show()
 $(".versionhide").removeClass("versionhide").filter("div").hide()
}

function getURLParameter(name) {
 return decodeURIComponent(
 (
 new RegExp(
 '[?|&]' + name + '=' + '([^&;]+?)(&|#|;|$)'
 ).exec(location.search) || [,""]
 )[1].replace(/\+/g, '%20')
 ) || null;
}

$(document).ready(function() {
 var activesystem = "catkin";
 var url\_distro = getURLParameter('buildsystem');
 if (url\_distro)
 {
 activesystem = url\_distro;
 }
 $("div.buildsystem").not("."+activesystem).hide();
 $("#"+activesystem).click();
 $("input.version:hidden").each(function() {
 var bg = $(this).attr("value").split(":");
 $("div.version." + bg[0]).css("background-color", bg[1]).removeClass(bg[0])
 });
})
 // -->

 catkin 
 rosbuild 
 Contents1. [Writing a Service Node](#roscpp_tutorials.2FTutorials.2FWritingServiceClient.Writing_a_Service_Node "#roscpp_tutorials.2FTutorials.2FWritingServiceClient.Writing_a_Service_Node")
	1. [The Code](#roscpp_tutorials.2FTutorials.2FWritingServiceClient.The_Code "#roscpp_tutorials.2FTutorials.2FWritingServiceClient.The_Code")
	2. [The Code Explained](#roscpp_tutorials.2FTutorials.2FWritingServiceClient.The_Code_Explained "#roscpp_tutorials.2FTutorials.2FWritingServiceClient.The_Code_Explained")
2. [Writing the Client Node](#roscpp_tutorials.2FTutorials.2FWritingServiceClient.Writing_the_Client_Node "#roscpp_tutorials.2FTutorials.2FWritingServiceClient.Writing_the_Client_Node")
	1. [The Code](#roscpp_tutorials.2FTutorials.2FWritingServiceClient.The_Code-1 "#roscpp_tutorials.2FTutorials.2FWritingServiceClient.The_Code-1")
	2. [The Code Explained](#roscpp_tutorials.2FTutorials.2FWritingServiceClient.The_Code_Explained-1 "#roscpp_tutorials.2FTutorials.2FWritingServiceClient.The_Code_Explained-1")
3. [Building your nodes](#roscpp_tutorials.2FTutorials.2FWritingServiceClient.Building_your_nodes "#roscpp_tutorials.2FTutorials.2FWritingServiceClient.Building_your_nodes")
4. [Building your nodes](#roscpp_tutorials.2FTutorials.2FWritingServiceClient.Building_your_nodes-1 "#roscpp_tutorials.2FTutorials.2FWritingServiceClient.Building_your_nodes-1")
5. [Running the nodes](#roscpp_tutorials.2FTutorials.2FWritingServiceClient.Running_the_nodes "#roscpp_tutorials.2FTutorials.2FWritingServiceClient.Running_the_nodes")
	1. [Running the Server](#roscpp_tutorials.2FTutorials.2FWritingServiceClient.Running_the_Server "#roscpp_tutorials.2FTutorials.2FWritingServiceClient.Running_the_Server")
	2. [Running the Client](#roscpp_tutorials.2FTutorials.2FWritingServiceClient.Running_the_Client "#roscpp_tutorials.2FTutorials.2FWritingServiceClient.Running_the_Client")
6. [Video Tutorial](#Video_Tutorial "#Video_Tutorial")


##Writing a Service Node (h2)

Here we'll create the service ("add\_two\_ints\_server") node which will receive two ints and return the sum. Change directory into the beginner\_tutorials package, you created previously in the [creating a rosbuild package](/ROS/Tutorials/CreatingPackage "/ROS/Tutorials/CreatingPackage") tutorial: 
```
roscd beginner_tutorials
```

Change directories to your beginner\_tutorials package you created in your catkin workspace previous tutorials: 
```
roscd beginner_tutorials
```

Please make sure you have followed the directions in the previous tutorial for creating the service needed in this tutorial, [creating the AddTwoInts.srv](/ROS/Tutorials/CreatingMsgAndSrv#Creating_a_srv "/ROS/Tutorials/CreatingMsgAndSrv#Creating_a_srv") (be sure to choose the right version of build tool you're using at the top of wiki page in the link). 

###The Code Explained (h3)

Now, let's break the code down. 

document.write('<a href="#" onclick="return togglenumber(\'roscpp\_tutorials.2FTutorials.2FWritingServiceClient.CA-ae5c23e9275f52f11e35b1c440a1b28eb4e05c6b\', 15, 1);" \
 class="codenumbers">Toggle line numbers<\/a>');

```
 [15](#roscpp_tutorials.2FTutorials.2FWritingServiceClient.CA-ae5c23e9275f52f11e35b1c440a1b28eb4e05c6b_15 "#roscpp_tutorials.2FTutorials.2FWritingServiceClient.CA-ae5c23e9275f52f11e35b1c440a1b28eb4e05c6b_15")  ros::ServiceClient client = n.serviceClient<beginner\_tutorials::AddTwoInts>("add\_two\_ints");

```
 This creates a client for the add\_two\_ints service. The ros::ServiceClient object is used to call the service later on. 

document.write('<a href="#" onclick="return togglenumber(\'roscpp\_tutorials.2FTutorials.2FWritingServiceClient.CA-6c61651582a4391fbbdc9c59b97b6557ba35c65a\', 16, 1);" \
 class="codenumbers">Toggle line numbers<\/a>');

```
 [16](#roscpp_tutorials.2FTutorials.2FWritingServiceClient.CA-6c61651582a4391fbbdc9c59b97b6557ba35c65a_16 "#roscpp_tutorials.2FTutorials.2FWritingServiceClient.CA-6c61651582a4391fbbdc9c59b97b6557ba35c65a_16")  beginner\_tutorials::AddTwoInts srv;
 [17](#roscpp_tutorials.2FTutorials.2FWritingServiceClient.CA-6c61651582a4391fbbdc9c59b97b6557ba35c65a_17 "#roscpp_tutorials.2FTutorials.2FWritingServiceClient.CA-6c61651582a4391fbbdc9c59b97b6557ba35c65a_17")  srv.request.a = atoll(argv[1]);
 [18](#roscpp_tutorials.2FTutorials.2FWritingServiceClient.CA-6c61651582a4391fbbdc9c59b97b6557ba35c65a_18 "#roscpp_tutorials.2FTutorials.2FWritingServiceClient.CA-6c61651582a4391fbbdc9c59b97b6557ba35c65a_18")  srv.request.b = atoll(argv[2]);

```
 Here we instantiate an autogenerated service class, and assign values into its request member. A service class contains two members, request and response. It also contains two class definitions, Request and Response. 

document.write('<a href="#" onclick="return togglenumber(\'roscpp\_tutorials.2FTutorials.2FWritingServiceClient.CA-449923a1ec1e665c95b5e8fe0e72050ab09d0f7a\', 19, 1);" \
 class="codenumbers">Toggle line numbers<\/a>');

```
 [19](#roscpp_tutorials.2FTutorials.2FWritingServiceClient.CA-449923a1ec1e665c95b5e8fe0e72050ab09d0f7a_19 "#roscpp_tutorials.2FTutorials.2FWritingServiceClient.CA-449923a1ec1e665c95b5e8fe0e72050ab09d0f7a_19")  if (client.call(srv))

```
 This actually calls the service. Since service calls are blocking, it will return once the call is done. If the service call succeeded, call() will return true and the value in srv.response will be valid. If the call did not succeed, call() will return false and the value in srv.response will be invalid. 



--------------------------------------------------------------------------------
(Table of Contents)
------ROS 2 Documentation (h4)
Wiki (h1)
Page (h1)
User (h1)
Writing a Simple Service and Client (C++) (h1)
--Writing a Service Node (h2)
----The Code (h3)
----The Code Explained (h3)
--Writing the Client Node (h2)
--Building your nodes (h2)
--Running the nodes (h2)
----Running the Server (h3)
----Running the Client (h3)
--Video Tutorial (h2)


(Page path)
(h1) Writing a Simple Service and Client (C++) > (h2) Writing the Client Node

(Segment 7)
#Writing a Simple Service and Client (C++) (h1)

**Description:** This tutorial covers how to write a service and client node in C++.  

**Tutorial Level:** BEGINNER  

**Next Tutorial:** [Examining the simple service and client](/ROS/Tutorials/ExaminingServiceClient "/ROS/Tutorials/ExaminingServiceClient")   

<!--
// @@ Buildsystem macro
function Buildsystem(sections) {
 var dotversion = ".buildsystem."

 // Tag shows unless already tagged
 $.each(sections.show,
 function() {
 $("div" + dotversion + this).not(".versionshow,.versionhide").addClass("versionshow")
 }
 )

 // Tag hides unless already tagged
 $.each(sections.hide,
 function() {
 $("div" + dotversion + this).not(".versionshow,.versionhide").addClass("versionhide")
 }
 )

 // Show or hide according to tag
 $(".versionshow").removeClass("versionshow").filter("div").show()
 $(".versionhide").removeClass("versionhide").filter("div").hide()
}

function getURLParameter(name) {
 return decodeURIComponent(
 (
 new RegExp(
 '[?|&]' + name + '=' + '([^&;]+?)(&|#|;|$)'
 ).exec(location.search) || [,""]
 )[1].replace(/\+/g, '%20')
 ) || null;
}

$(document).ready(function() {
 var activesystem = "catkin";
 var url\_distro = getURLParameter('buildsystem');
 if (url\_distro)
 {
 activesystem = url\_distro;
 }
 $("div.buildsystem").not("."+activesystem).hide();
 $("#"+activesystem).click();
 $("input.version:hidden").each(function() {
 var bg = $(this).attr("value").split(":");
 $("div.version." + bg[0]).css("background-color", bg[1]).removeClass(bg[0])
 });
})
 // -->

 catkin 
 rosbuild 
 Contents1. [Writing a Service Node](#roscpp_tutorials.2FTutorials.2FWritingServiceClient.Writing_a_Service_Node "#roscpp_tutorials.2FTutorials.2FWritingServiceClient.Writing_a_Service_Node")
	1. [The Code](#roscpp_tutorials.2FTutorials.2FWritingServiceClient.The_Code "#roscpp_tutorials.2FTutorials.2FWritingServiceClient.The_Code")
	2. [The Code Explained](#roscpp_tutorials.2FTutorials.2FWritingServiceClient.The_Code_Explained "#roscpp_tutorials.2FTutorials.2FWritingServiceClient.The_Code_Explained")
2. [Writing the Client Node](#roscpp_tutorials.2FTutorials.2FWritingServiceClient.Writing_the_Client_Node "#roscpp_tutorials.2FTutorials.2FWritingServiceClient.Writing_the_Client_Node")
	1. [The Code](#roscpp_tutorials.2FTutorials.2FWritingServiceClient.The_Code-1 "#roscpp_tutorials.2FTutorials.2FWritingServiceClient.The_Code-1")
	2. [The Code Explained](#roscpp_tutorials.2FTutorials.2FWritingServiceClient.The_Code_Explained-1 "#roscpp_tutorials.2FTutorials.2FWritingServiceClient.The_Code_Explained-1")
3. [Building your nodes](#roscpp_tutorials.2FTutorials.2FWritingServiceClient.Building_your_nodes "#roscpp_tutorials.2FTutorials.2FWritingServiceClient.Building_your_nodes")
4. [Building your nodes](#roscpp_tutorials.2FTutorials.2FWritingServiceClient.Building_your_nodes-1 "#roscpp_tutorials.2FTutorials.2FWritingServiceClient.Building_your_nodes-1")
5. [Running the nodes](#roscpp_tutorials.2FTutorials.2FWritingServiceClient.Running_the_nodes "#roscpp_tutorials.2FTutorials.2FWritingServiceClient.Running_the_nodes")
	1. [Running the Server](#roscpp_tutorials.2FTutorials.2FWritingServiceClient.Running_the_Server "#roscpp_tutorials.2FTutorials.2FWritingServiceClient.Running_the_Server")
	2. [Running the Client](#roscpp_tutorials.2FTutorials.2FWritingServiceClient.Running_the_Client "#roscpp_tutorials.2FTutorials.2FWritingServiceClient.Running_the_Client")
6. [Video Tutorial](#Video_Tutorial "#Video_Tutorial")


##Writing the Client Node (h2)




--------------------------------------------------------------------------------
(Table of Contents)
------ROS 2 Documentation (h4)
Wiki (h1)
Page (h1)
User (h1)
Writing a Simple Service and Client (C++) (h1)
--Writing a Service Node (h2)
----The Code (h3)
----The Code Explained (h3)
--Writing the Client Node (h2)
--Building your nodes (h2)
--Running the nodes (h2)
----Running the Server (h3)
----Running the Client (h3)
--Video Tutorial (h2)


(Page path)
(h1) Writing a Simple Service and Client (C++) > (h2) Building your nodes

(Segment 8)
#Writing a Simple Service and Client (C++) (h1)

**Description:** This tutorial covers how to write a service and client node in C++.  

**Tutorial Level:** BEGINNER  

**Next Tutorial:** [Examining the simple service and client](/ROS/Tutorials/ExaminingServiceClient "/ROS/Tutorials/ExaminingServiceClient")   

<!--
// @@ Buildsystem macro
function Buildsystem(sections) {
 var dotversion = ".buildsystem."

 // Tag shows unless already tagged
 $.each(sections.show,
 function() {
 $("div" + dotversion + this).not(".versionshow,.versionhide").addClass("versionshow")
 }
 )

 // Tag hides unless already tagged
 $.each(sections.hide,
 function() {
 $("div" + dotversion + this).not(".versionshow,.versionhide").addClass("versionhide")
 }
 )

 // Show or hide according to tag
 $(".versionshow").removeClass("versionshow").filter("div").show()
 $(".versionhide").removeClass("versionhide").filter("div").hide()
}

function getURLParameter(name) {
 return decodeURIComponent(
 (
 new RegExp(
 '[?|&]' + name + '=' + '([^&;]+?)(&|#|;|$)'
 ).exec(location.search) || [,""]
 )[1].replace(/\+/g, '%20')
 ) || null;
}

$(document).ready(function() {
 var activesystem = "catkin";
 var url\_distro = getURLParameter('buildsystem');
 if (url\_distro)
 {
 activesystem = url\_distro;
 }
 $("div.buildsystem").not("."+activesystem).hide();
 $("#"+activesystem).click();
 $("input.version:hidden").each(function() {
 var bg = $(this).attr("value").split(":");
 $("div.version." + bg[0]).css("background-color", bg[1]).removeClass(bg[0])
 });
})
 // -->

 catkin 
 rosbuild 
 Contents1. [Writing a Service Node](#roscpp_tutorials.2FTutorials.2FWritingServiceClient.Writing_a_Service_Node "#roscpp_tutorials.2FTutorials.2FWritingServiceClient.Writing_a_Service_Node")
	1. [The Code](#roscpp_tutorials.2FTutorials.2FWritingServiceClient.The_Code "#roscpp_tutorials.2FTutorials.2FWritingServiceClient.The_Code")
	2. [The Code Explained](#roscpp_tutorials.2FTutorials.2FWritingServiceClient.The_Code_Explained "#roscpp_tutorials.2FTutorials.2FWritingServiceClient.The_Code_Explained")
2. [Writing the Client Node](#roscpp_tutorials.2FTutorials.2FWritingServiceClient.Writing_the_Client_Node "#roscpp_tutorials.2FTutorials.2FWritingServiceClient.Writing_the_Client_Node")
	1. [The Code](#roscpp_tutorials.2FTutorials.2FWritingServiceClient.The_Code-1 "#roscpp_tutorials.2FTutorials.2FWritingServiceClient.The_Code-1")
	2. [The Code Explained](#roscpp_tutorials.2FTutorials.2FWritingServiceClient.The_Code_Explained-1 "#roscpp_tutorials.2FTutorials.2FWritingServiceClient.The_Code_Explained-1")
3. [Building your nodes](#roscpp_tutorials.2FTutorials.2FWritingServiceClient.Building_your_nodes "#roscpp_tutorials.2FTutorials.2FWritingServiceClient.Building_your_nodes")
4. [Building your nodes](#roscpp_tutorials.2FTutorials.2FWritingServiceClient.Building_your_nodes-1 "#roscpp_tutorials.2FTutorials.2FWritingServiceClient.Building_your_nodes-1")
5. [Running the nodes](#roscpp_tutorials.2FTutorials.2FWritingServiceClient.Running_the_nodes "#roscpp_tutorials.2FTutorials.2FWritingServiceClient.Running_the_nodes")
	1. [Running the Server](#roscpp_tutorials.2FTutorials.2FWritingServiceClient.Running_the_Server "#roscpp_tutorials.2FTutorials.2FWritingServiceClient.Running_the_Server")
	2. [Running the Client](#roscpp_tutorials.2FTutorials.2FWritingServiceClient.Running_the_Client "#roscpp_tutorials.2FTutorials.2FWritingServiceClient.Running_the_Client")
6. [Video Tutorial](#Video_Tutorial "#Video_Tutorial")


##Building your nodes (h2)

Again edit the beginner\_tutorials CMakeLists.txt located at ~/catkin\_ws/src/beginner\_tutorials/CMakeLists.txt and add the following at the end: *[https://raw.github.com/ros/catkin\_tutorials/master/create\_package\_srvclient/catkin\_ws/src/beginner\_tutorials/CMakeLists.txt](https://raw.github.com/ros/catkin_tutorials/master/create_package_srvclient/catkin_ws/src/beginner_tutorials/CMakeLists.txt "https://raw.github.com/ros/catkin_tutorials/master/create_package_srvclient/catkin_ws/src/beginner_tutorials/CMakeLists.txt")* 

document.write('<a href="#" onclick="return togglenumber(\'roscpp\_tutorials.2FTutorials.2FWritingServiceClient.CA-2686a22f58f4fe36f5224d89a67c332c5b56c4b3\', 27, 1);" \
 class="codenumbers">Toggle line numbers<\/a>');

```
 [27](#roscpp_tutorials.2FTutorials.2FWritingServiceClient.CA-2686a22f58f4fe36f5224d89a67c332c5b56c4b3_27 "#roscpp_tutorials.2FTutorials.2FWritingServiceClient.CA-2686a22f58f4fe36f5224d89a67c332c5b56c4b3_27") add\_executable(add\_two\_ints\_server src/add\_two\_ints\_server.cpp)
 [28](#roscpp_tutorials.2FTutorials.2FWritingServiceClient.CA-2686a22f58f4fe36f5224d89a67c332c5b56c4b3_28 "#roscpp_tutorials.2FTutorials.2FWritingServiceClient.CA-2686a22f58f4fe36f5224d89a67c332c5b56c4b3_28") target\_link\_libraries(add\_two\_ints\_server ${catkin\_LIBRARIES})
 [29](#roscpp_tutorials.2FTutorials.2FWritingServiceClient.CA-2686a22f58f4fe36f5224d89a67c332c5b56c4b3_29 "#roscpp_tutorials.2FTutorials.2FWritingServiceClient.CA-2686a22f58f4fe36f5224d89a67c332c5b56c4b3_29") add\_dependencies(add\_two\_ints\_server beginner\_tutorials\_gencpp)
 [30](#roscpp_tutorials.2FTutorials.2FWritingServiceClient.CA-2686a22f58f4fe36f5224d89a67c332c5b56c4b3_30 "#roscpp_tutorials.2FTutorials.2FWritingServiceClient.CA-2686a22f58f4fe36f5224d89a67c332c5b56c4b3_30") 
 [31](#roscpp_tutorials.2FTutorials.2FWritingServiceClient.CA-2686a22f58f4fe36f5224d89a67c332c5b56c4b3_31 "#roscpp_tutorials.2FTutorials.2FWritingServiceClient.CA-2686a22f58f4fe36f5224d89a67c332c5b56c4b3_31") add\_executable(add\_two\_ints\_client src/add\_two\_ints\_client.cpp)
 [32](#roscpp_tutorials.2FTutorials.2FWritingServiceClient.CA-2686a22f58f4fe36f5224d89a67c332c5b56c4b3_32 "#roscpp_tutorials.2FTutorials.2FWritingServiceClient.CA-2686a22f58f4fe36f5224d89a67c332c5b56c4b3_32") target\_link\_libraries(add\_two\_ints\_client ${catkin\_LIBRARIES})
 [33](#roscpp_tutorials.2FTutorials.2FWritingServiceClient.CA-2686a22f58f4fe36f5224d89a67c332c5b56c4b3_33 "#roscpp_tutorials.2FTutorials.2FWritingServiceClient.CA-2686a22f58f4fe36f5224d89a67c332c5b56c4b3_33") add\_dependencies(add\_two\_ints\_client beginner\_tutorials\_gencpp)

```
 This will create two executables, add\_two\_ints\_server and add\_two\_ints\_client, which by default will go into package directory of your [devel space](/catkin/workspaces#Development_.28Devel.29_Space "/catkin/workspaces#Development_.28Devel.29_Space"), located by default at ~/catkin\_ws/devel/lib/<package name>. You can invoke executables directly or you can use rosrun to invoke them. They are not placed in '<prefix>/bin' because that would pollute the PATH when installing your package to the system. If you wish for your executable to be on the PATH at installation time, you can setup an install target, see: [catkin/CMakeLists.txt](/catkin/CMakeLists.txt "/catkin/CMakeLists.txt") For more detailed description of the [CMakeLists.txt](/catkin/CMakeLists.txt "/catkin/CMakeLists.txt") file see: [catkin/CMakeLists.txt](/catkin/CMakeLists.txt "/catkin/CMakeLists.txt") Now run catkin\_make: 
```
# In your catkin workspace
cd ~/catkin_ws
catkin_make
```

If your build fails for some reason: * make sure you have followed the directions in the previous tutorial: [creating the AddTwoInts.srv](/ROS/Tutorials/CreatingMsgAndSrv#Creating_a_srv "/ROS/Tutorials/CreatingMsgAndSrv#Creating_a_srv").

* type rosls beginner\_tutorials/srv\_gen/cpp/include/beginner\_tutorials/ and check that the .h file matches the include in the client and server .cpp files.




--------------------------------------------------------------------------------
(Table of Contents)
------ROS 2 Documentation (h4)
Wiki (h1)
Page (h1)
User (h1)
Writing a Simple Service and Client (C++) (h1)
--Writing a Service Node (h2)
----The Code (h3)
----The Code Explained (h3)
--Writing the Client Node (h2)
--Building your nodes (h2)
--Running the nodes (h2)
----Running the Server (h3)
----Running the Client (h3)
--Video Tutorial (h2)


(Page path)
(h1) Writing a Simple Service and Client (C++) > (h2) Running the nodes > (h3) Running the Server

(Segment 9)
#Writing a Simple Service and Client (C++) (h1)

**Description:** This tutorial covers how to write a service and client node in C++.  

**Tutorial Level:** BEGINNER  

**Next Tutorial:** [Examining the simple service and client](/ROS/Tutorials/ExaminingServiceClient "/ROS/Tutorials/ExaminingServiceClient")   

<!--
// @@ Buildsystem macro
function Buildsystem(sections) {
 var dotversion = ".buildsystem."

 // Tag shows unless already tagged
 $.each(sections.show,
 function() {
 $("div" + dotversion + this).not(".versionshow,.versionhide").addClass("versionshow")
 }
 )

 // Tag hides unless already tagged
 $.each(sections.hide,
 function() {
 $("div" + dotversion + this).not(".versionshow,.versionhide").addClass("versionhide")
 }
 )

 // Show or hide according to tag
 $(".versionshow").removeClass("versionshow").filter("div").show()
 $(".versionhide").removeClass("versionhide").filter("div").hide()
}

function getURLParameter(name) {
 return decodeURIComponent(
 (
 new RegExp(
 '[?|&]' + name + '=' + '([^&;]+?)(&|#|;|$)'
 ).exec(location.search) || [,""]
 )[1].replace(/\+/g, '%20')
 ) || null;
}

$(document).ready(function() {
 var activesystem = "catkin";
 var url\_distro = getURLParameter('buildsystem');
 if (url\_distro)
 {
 activesystem = url\_distro;
 }
 $("div.buildsystem").not("."+activesystem).hide();
 $("#"+activesystem).click();
 $("input.version:hidden").each(function() {
 var bg = $(this).attr("value").split(":");
 $("div.version." + bg[0]).css("background-color", bg[1]).removeClass(bg[0])
 });
})
 // -->

 catkin 
 rosbuild 
 Contents1. [Writing a Service Node](#roscpp_tutorials.2FTutorials.2FWritingServiceClient.Writing_a_Service_Node "#roscpp_tutorials.2FTutorials.2FWritingServiceClient.Writing_a_Service_Node")
	1. [The Code](#roscpp_tutorials.2FTutorials.2FWritingServiceClient.The_Code "#roscpp_tutorials.2FTutorials.2FWritingServiceClient.The_Code")
	2. [The Code Explained](#roscpp_tutorials.2FTutorials.2FWritingServiceClient.The_Code_Explained "#roscpp_tutorials.2FTutorials.2FWritingServiceClient.The_Code_Explained")
2. [Writing the Client Node](#roscpp_tutorials.2FTutorials.2FWritingServiceClient.Writing_the_Client_Node "#roscpp_tutorials.2FTutorials.2FWritingServiceClient.Writing_the_Client_Node")
	1. [The Code](#roscpp_tutorials.2FTutorials.2FWritingServiceClient.The_Code-1 "#roscpp_tutorials.2FTutorials.2FWritingServiceClient.The_Code-1")
	2. [The Code Explained](#roscpp_tutorials.2FTutorials.2FWritingServiceClient.The_Code_Explained-1 "#roscpp_tutorials.2FTutorials.2FWritingServiceClient.The_Code_Explained-1")
3. [Building your nodes](#roscpp_tutorials.2FTutorials.2FWritingServiceClient.Building_your_nodes "#roscpp_tutorials.2FTutorials.2FWritingServiceClient.Building_your_nodes")
4. [Building your nodes](#roscpp_tutorials.2FTutorials.2FWritingServiceClient.Building_your_nodes-1 "#roscpp_tutorials.2FTutorials.2FWritingServiceClient.Building_your_nodes-1")
5. [Running the nodes](#roscpp_tutorials.2FTutorials.2FWritingServiceClient.Running_the_nodes "#roscpp_tutorials.2FTutorials.2FWritingServiceClient.Running_the_nodes")
	1. [Running the Server](#roscpp_tutorials.2FTutorials.2FWritingServiceClient.Running_the_Server "#roscpp_tutorials.2FTutorials.2FWritingServiceClient.Running_the_Server")
	2. [Running the Client](#roscpp_tutorials.2FTutorials.2FWritingServiceClient.Running_the_Client "#roscpp_tutorials.2FTutorials.2FWritingServiceClient.Running_the_Client")
6. [Video Tutorial](#Video_Tutorial "#Video_Tutorial")


##Running the nodes (h2)

Running nodes requires you have a ROS core started. Open a new shell, and type: 
```
roscore
```
If all goes well, you should see an output that looks something like this: 
```
... logging to /u/takayama/.ros/logs/83871c9c-934b-11de-a451-
001d927076eb/roslaunch-ads-31831.log
... loading XML file 
[/wg/stor1a/rosbuild/shared_installation/ros/tools/roslaunch/roscore.xml]
Added core node of type [rosout/rosout] in namespace [/]
started roslaunch server http://ads:54367/

SUMMARY
======

NODES

changing ROS_MASTER_URI to [http://ads:11311/] for starting master locally
starting new master (master configured for auto start)
process[master]: started with pid [31874]
ROS_MASTER_URI=http://ads:11311/
setting /run_id to 83871c9c-934b-11de-a451-001d927076eb
+PARAM [/run_id] by /roslaunch
+PARAM [/roslaunch/uris/ads:54367] by /roslaunch
process[rosout-1]: started with pid [31889]
started core service [/rosout]
+SUB [/time] /rosout http://ads:33744/
+SERVICE [/rosout/get_loggers] /rosout http://ads:33744/
+SERVICE [/rosout/set_logger_level] /rosout http://ads:33744/
+PUB [/rosout_agg] /rosout http://ads:33744/
+SUB [/rosout] /rosout http://ads:33744/
```
Now everything is set to run server and client. 

###Running the Server (h3)

Start by running the server. Open a new shell and type: 
```
rosrun beginner_tutorials add_two_ints_server
```
You should see something similar to: 
```
Ready to add two ints.
```




--------------------------------------------------------------------------------
(Table of Contents)
------ROS 2 Documentation (h4)
Wiki (h1)
Page (h1)
User (h1)
Writing a Simple Service and Client (C++) (h1)
--Writing a Service Node (h2)
----The Code (h3)
----The Code Explained (h3)
--Writing the Client Node (h2)
--Building your nodes (h2)
--Running the nodes (h2)
----Running the Server (h3)
----Running the Client (h3)
--Video Tutorial (h2)


(Page path)
(h1) Writing a Simple Service and Client (C++) > (h2) Running the nodes > (h3) Running the Client

(Segment 10)
#Writing a Simple Service and Client (C++) (h1)

**Description:** This tutorial covers how to write a service and client node in C++.  

**Tutorial Level:** BEGINNER  

**Next Tutorial:** [Examining the simple service and client](/ROS/Tutorials/ExaminingServiceClient "/ROS/Tutorials/ExaminingServiceClient")   

<!--
// @@ Buildsystem macro
function Buildsystem(sections) {
 var dotversion = ".buildsystem."

 // Tag shows unless already tagged
 $.each(sections.show,
 function() {
 $("div" + dotversion + this).not(".versionshow,.versionhide").addClass("versionshow")
 }
 )

 // Tag hides unless already tagged
 $.each(sections.hide,
 function() {
 $("div" + dotversion + this).not(".versionshow,.versionhide").addClass("versionhide")
 }
 )

 // Show or hide according to tag
 $(".versionshow").removeClass("versionshow").filter("div").show()
 $(".versionhide").removeClass("versionhide").filter("div").hide()
}

function getURLParameter(name) {
 return decodeURIComponent(
 (
 new RegExp(
 '[?|&]' + name + '=' + '([^&;]+?)(&|#|;|$)'
 ).exec(location.search) || [,""]
 )[1].replace(/\+/g, '%20')
 ) || null;
}

$(document).ready(function() {
 var activesystem = "catkin";
 var url\_distro = getURLParameter('buildsystem');
 if (url\_distro)
 {
 activesystem = url\_distro;
 }
 $("div.buildsystem").not("."+activesystem).hide();
 $("#"+activesystem).click();
 $("input.version:hidden").each(function() {
 var bg = $(this).attr("value").split(":");
 $("div.version." + bg[0]).css("background-color", bg[1]).removeClass(bg[0])
 });
})
 // -->

 catkin 
 rosbuild 
 Contents1. [Writing a Service Node](#roscpp_tutorials.2FTutorials.2FWritingServiceClient.Writing_a_Service_Node "#roscpp_tutorials.2FTutorials.2FWritingServiceClient.Writing_a_Service_Node")
	1. [The Code](#roscpp_tutorials.2FTutorials.2FWritingServiceClient.The_Code "#roscpp_tutorials.2FTutorials.2FWritingServiceClient.The_Code")
	2. [The Code Explained](#roscpp_tutorials.2FTutorials.2FWritingServiceClient.The_Code_Explained "#roscpp_tutorials.2FTutorials.2FWritingServiceClient.The_Code_Explained")
2. [Writing the Client Node](#roscpp_tutorials.2FTutorials.2FWritingServiceClient.Writing_the_Client_Node "#roscpp_tutorials.2FTutorials.2FWritingServiceClient.Writing_the_Client_Node")
	1. [The Code](#roscpp_tutorials.2FTutorials.2FWritingServiceClient.The_Code-1 "#roscpp_tutorials.2FTutorials.2FWritingServiceClient.The_Code-1")
	2. [The Code Explained](#roscpp_tutorials.2FTutorials.2FWritingServiceClient.The_Code_Explained-1 "#roscpp_tutorials.2FTutorials.2FWritingServiceClient.The_Code_Explained-1")
3. [Building your nodes](#roscpp_tutorials.2FTutorials.2FWritingServiceClient.Building_your_nodes "#roscpp_tutorials.2FTutorials.2FWritingServiceClient.Building_your_nodes")
4. [Building your nodes](#roscpp_tutorials.2FTutorials.2FWritingServiceClient.Building_your_nodes-1 "#roscpp_tutorials.2FTutorials.2FWritingServiceClient.Building_your_nodes-1")
5. [Running the nodes](#roscpp_tutorials.2FTutorials.2FWritingServiceClient.Running_the_nodes "#roscpp_tutorials.2FTutorials.2FWritingServiceClient.Running_the_nodes")
	1. [Running the Server](#roscpp_tutorials.2FTutorials.2FWritingServiceClient.Running_the_Server "#roscpp_tutorials.2FTutorials.2FWritingServiceClient.Running_the_Server")
	2. [Running the Client](#roscpp_tutorials.2FTutorials.2FWritingServiceClient.Running_the_Client "#roscpp_tutorials.2FTutorials.2FWritingServiceClient.Running_the_Client")
6. [Video Tutorial](#Video_Tutorial "#Video_Tutorial")


##Running the nodes (h2)

Running nodes requires you have a ROS core started. Open a new shell, and type: 
```
roscore
```
If all goes well, you should see an output that looks something like this: 
```
... logging to /u/takayama/.ros/logs/83871c9c-934b-11de-a451-
001d927076eb/roslaunch-ads-31831.log
... loading XML file 
[/wg/stor1a/rosbuild/shared_installation/ros/tools/roslaunch/roscore.xml]
Added core node of type [rosout/rosout] in namespace [/]
started roslaunch server http://ads:54367/

SUMMARY
======

NODES

changing ROS_MASTER_URI to [http://ads:11311/] for starting master locally
starting new master (master configured for auto start)
process[master]: started with pid [31874]
ROS_MASTER_URI=http://ads:11311/
setting /run_id to 83871c9c-934b-11de-a451-001d927076eb
+PARAM [/run_id] by /roslaunch
+PARAM [/roslaunch/uris/ads:54367] by /roslaunch
process[rosout-1]: started with pid [31889]
started core service [/rosout]
+SUB [/time] /rosout http://ads:33744/
+SERVICE [/rosout/get_loggers] /rosout http://ads:33744/
+SERVICE [/rosout/set_logger_level] /rosout http://ads:33744/
+PUB [/rosout_agg] /rosout http://ads:33744/
+SUB [/rosout] /rosout http://ads:33744/
```
Now everything is set to run server and client. 

###Running the Client (h3)

Now let's run the client with the necessary arguments, in another shell: 
```
$ rosrun beginner_tutorials add_two_ints_client 1 3
```
In the client's shell, you should see something similar to: 
```
Sum: 4
```
In the server's shell, instead, you should see something similar to: 
```
request: x=1, y=3
sending back response: [4]
```

 Now that you have written a simple service and client, let's [examine the simple service and client](/ROS/Tutorials/ExaminingServiceClient "/ROS/Tutorials/ExaminingServiceClient"). 



--------------------------------------------------------------------------------
(Table of Contents)
------ROS 2 Documentation (h4)
Wiki (h1)
Page (h1)
User (h1)
Writing a Simple Service and Client (C++) (h1)
--Writing a Service Node (h2)
----The Code (h3)
----The Code Explained (h3)
--Writing the Client Node (h2)
--Building your nodes (h2)
--Running the nodes (h2)
----Running the Server (h3)
----Running the Client (h3)
--Video Tutorial (h2)


(Page path)
(h1) Writing a Simple Service and Client (C++) > (h2) Video Tutorial

(Segment 11)
#Writing a Simple Service and Client (C++) (h1)

**Description:** This tutorial covers how to write a service and client node in C++.  

**Tutorial Level:** BEGINNER  

**Next Tutorial:** [Examining the simple service and client](/ROS/Tutorials/ExaminingServiceClient "/ROS/Tutorials/ExaminingServiceClient")   

<!--
// @@ Buildsystem macro
function Buildsystem(sections) {
 var dotversion = ".buildsystem."

 // Tag shows unless already tagged
 $.each(sections.show,
 function() {
 $("div" + dotversion + this).not(".versionshow,.versionhide").addClass("versionshow")
 }
 )

 // Tag hides unless already tagged
 $.each(sections.hide,
 function() {
 $("div" + dotversion + this).not(".versionshow,.versionhide").addClass("versionhide")
 }
 )

 // Show or hide according to tag
 $(".versionshow").removeClass("versionshow").filter("div").show()
 $(".versionhide").removeClass("versionhide").filter("div").hide()
}

function getURLParameter(name) {
 return decodeURIComponent(
 (
 new RegExp(
 '[?|&]' + name + '=' + '([^&;]+?)(&|#|;|$)'
 ).exec(location.search) || [,""]
 )[1].replace(/\+/g, '%20')
 ) || null;
}

$(document).ready(function() {
 var activesystem = "catkin";
 var url\_distro = getURLParameter('buildsystem');
 if (url\_distro)
 {
 activesystem = url\_distro;
 }
 $("div.buildsystem").not("."+activesystem).hide();
 $("#"+activesystem).click();
 $("input.version:hidden").each(function() {
 var bg = $(this).attr("value").split(":");
 $("div.version." + bg[0]).css("background-color", bg[1]).removeClass(bg[0])
 });
})
 // -->

 catkin 
 rosbuild 
 Contents1. [Writing a Service Node](#roscpp_tutorials.2FTutorials.2FWritingServiceClient.Writing_a_Service_Node "#roscpp_tutorials.2FTutorials.2FWritingServiceClient.Writing_a_Service_Node")
	1. [The Code](#roscpp_tutorials.2FTutorials.2FWritingServiceClient.The_Code "#roscpp_tutorials.2FTutorials.2FWritingServiceClient.The_Code")
	2. [The Code Explained](#roscpp_tutorials.2FTutorials.2FWritingServiceClient.The_Code_Explained "#roscpp_tutorials.2FTutorials.2FWritingServiceClient.The_Code_Explained")
2. [Writing the Client Node](#roscpp_tutorials.2FTutorials.2FWritingServiceClient.Writing_the_Client_Node "#roscpp_tutorials.2FTutorials.2FWritingServiceClient.Writing_the_Client_Node")
	1. [The Code](#roscpp_tutorials.2FTutorials.2FWritingServiceClient.The_Code-1 "#roscpp_tutorials.2FTutorials.2FWritingServiceClient.The_Code-1")
	2. [The Code Explained](#roscpp_tutorials.2FTutorials.2FWritingServiceClient.The_Code_Explained-1 "#roscpp_tutorials.2FTutorials.2FWritingServiceClient.The_Code_Explained-1")
3. [Building your nodes](#roscpp_tutorials.2FTutorials.2FWritingServiceClient.Building_your_nodes "#roscpp_tutorials.2FTutorials.2FWritingServiceClient.Building_your_nodes")
4. [Building your nodes](#roscpp_tutorials.2FTutorials.2FWritingServiceClient.Building_your_nodes-1 "#roscpp_tutorials.2FTutorials.2FWritingServiceClient.Building_your_nodes-1")
5. [Running the nodes](#roscpp_tutorials.2FTutorials.2FWritingServiceClient.Running_the_nodes "#roscpp_tutorials.2FTutorials.2FWritingServiceClient.Running_the_nodes")
	1. [Running the Server](#roscpp_tutorials.2FTutorials.2FWritingServiceClient.Running_the_Server "#roscpp_tutorials.2FTutorials.2FWritingServiceClient.Running_the_Server")
	2. [Running the Client](#roscpp_tutorials.2FTutorials.2FWritingServiceClient.Running_the_Client "#roscpp_tutorials.2FTutorials.2FWritingServiceClient.Running_the_Client")
6. [Video Tutorial](#Video_Tutorial "#Video_Tutorial")


##Video Tutorial (h2)

The following video presents a small tutorial on ROS services.  

Wiki: ROS/Tutorials/WritingServiceClient(c++) (last edited 2019-07-18 19:13:24 by [AnisKoubaa](/AnisKoubaa "AnisKoubaa @ 102.172.113.40[102.172.113.40]"))

Except where otherwise noted, the ROS wiki is licensed under the   




--------------------------------------------------------------------------------
